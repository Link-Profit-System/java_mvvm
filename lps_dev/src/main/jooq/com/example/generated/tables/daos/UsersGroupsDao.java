/*
 * This file is generated by jOOQ.
 */
package com.example.generated.tables.daos;


import com.example.generated.tables.JUsersGroups;
import com.example.generated.tables.pojos.UsersGroupsVo;
import com.example.generated.tables.records.UsersGroupsRecord;

import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UsersGroupsDao extends DAOImpl<UsersGroupsRecord, UsersGroupsVo, Integer> {

    /**
     * Create a new UsersGroupsDao without any configuration
     */
    public UsersGroupsDao() {
        super(JUsersGroups.USERS_GROUPS, UsersGroupsVo.class);
    }

    /**
     * Create a new UsersGroupsDao with an attached configuration
     */
    public UsersGroupsDao(Configuration configuration) {
        super(JUsersGroups.USERS_GROUPS, UsersGroupsVo.class, configuration);
    }

    @Override
    public Integer getId(UsersGroupsVo object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<UsersGroupsVo> fetchRangeOfJId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(JUsersGroups.USERS_GROUPS.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<UsersGroupsVo> fetchByJId(Integer... values) {
        return fetch(JUsersGroups.USERS_GROUPS.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public UsersGroupsVo fetchOneByJId(Integer value) {
        return fetchOne(JUsersGroups.USERS_GROUPS.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<UsersGroupsVo> fetchOptionalByJId(Integer value) {
        return fetchOptional(JUsersGroups.USERS_GROUPS.ID, value);
    }

    /**
     * Fetch records that have <code>user_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<UsersGroupsVo> fetchRangeOfJUserId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(JUsersGroups.USERS_GROUPS.USER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>user_id IN (values)</code>
     */
    public List<UsersGroupsVo> fetchByJUserId(Integer... values) {
        return fetch(JUsersGroups.USERS_GROUPS.USER_ID, values);
    }

    /**
     * Fetch records that have <code>group_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<UsersGroupsVo> fetchRangeOfJGroupId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(JUsersGroups.USERS_GROUPS.GROUP_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>group_id IN (values)</code>
     */
    public List<UsersGroupsVo> fetchByJGroupId(Integer... values) {
        return fetch(JUsersGroups.USERS_GROUPS.GROUP_ID, values);
    }

    /**
     * Fetch records that have <code>created_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<UsersGroupsVo> fetchRangeOfJCreatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(JUsersGroups.USERS_GROUPS.CREATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_at IN (values)</code>
     */
    public List<UsersGroupsVo> fetchByJCreatedAt(LocalDateTime... values) {
        return fetch(JUsersGroups.USERS_GROUPS.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>created_by BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<UsersGroupsVo> fetchRangeOfJCreatedBy(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(JUsersGroups.USERS_GROUPS.CREATED_BY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_by IN (values)</code>
     */
    public List<UsersGroupsVo> fetchByJCreatedBy(Integer... values) {
        return fetch(JUsersGroups.USERS_GROUPS.CREATED_BY, values);
    }

    /**
     * Fetch records that have <code>updated_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<UsersGroupsVo> fetchRangeOfJUpdatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(JUsersGroups.USERS_GROUPS.UPDATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_at IN (values)</code>
     */
    public List<UsersGroupsVo> fetchByJUpdatedAt(LocalDateTime... values) {
        return fetch(JUsersGroups.USERS_GROUPS.UPDATED_AT, values);
    }

    /**
     * Fetch records that have <code>updated_by BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<UsersGroupsVo> fetchRangeOfJUpdatedBy(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(JUsersGroups.USERS_GROUPS.UPDATED_BY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_by IN (values)</code>
     */
    public List<UsersGroupsVo> fetchByJUpdatedBy(Integer... values) {
        return fetch(JUsersGroups.USERS_GROUPS.UPDATED_BY, values);
    }
}
